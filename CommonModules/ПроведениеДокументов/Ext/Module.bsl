
Процедура ПроверкаОперативногоСписания(Объект, Режим, отказ) Экспорт
	
		//Оперативное проведение
	Объект.Движения.ОстаткиТоваров.Записывать = Истина;
	
	Объект.Движения.ОстаткиТоваров.БлокироватьДляИзменения = Истина;
	
	Для Каждого ТекСтрокаСписокТоваров Из Объект.СписокТоваров Цикл
		Движение = Объект.Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Объект.Дата;
		Движение.Номенклатура = ТекСтрокаСписокТоваров.Номенклатура;
		Движение.Склад = Объект.Склад;
		Движение.Количество = ТекСтрокаСписокТоваров.Количество;
	КонецЦикла;

	Объект.Движения.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДокСписокТоваров.Номенклатура КАК Номенклатура,
		|	СУММА(ДокСписокТоваров.Количество) КАК Количество
		|ПОМЕСТИТЬ ДокТЧ
		|ИЗ
		|	Документ." + Объект.Метаданные().Имя + ".СписокТоваров КАК ДокСписокТоваров
		|ГДЕ
		|	ДокСписокТоваров.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ДокСписокТоваров.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиТоваровОстатки.Номенклатура КАК Номенклатура,
		|	ОстаткиТоваровОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ОстаткиТоваровОстатки.Номенклатура.Представление КАК НоменклатураПредставление
		|ИЗ
		|	РегистрНакопления.ОстаткиТоваров.Остатки(
		|			&МоментИтогов,
		|			(Номенклатура, Склад) В
		|				(ВЫБРАТЬ
		|					ДокТЧ.Номенклатура,
		|					&Склад
		|				ИЗ
		|					ДокТЧ)) КАК ОстаткиТоваровОстатки
		|ГДЕ
		|	ОстаткиТоваровОстатки.КоличествоОстаток < 0";
	
	Если Режим = РежимПроведенияДокумента.Оперативный Тогда
		МоментИтогов = '00010101';
	Иначе
		МоментИтогов = Новый Граница(Объект.МоментВремени(), ВидГраницы.Включая);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МоментИтогов", МоментИтогов);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Отказ = истина;
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Недостаточно товара " + Выборка.НоменклатураПредставление + ". Не хватает: " + (-Выборка.КоличествоОстаток);
			Сообщение.Сообщить();
			
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры

Процедура СформироватьПартионноеСписание(Объект, Режим) Экспорт
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПартииТоваров");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных =  Объект.СписокТоваров;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.УстановитьЗначение("Склад", Объект.Склад);
	
	Блокировка.Заблокировать();
	
	Объект.Движения.ПартииТоваров.Записывать = Истина;
	
	ЗапросМетодыСписания = новый Запрос;
	ЗапросМетодыСписания.Текст = 
		"ВЫБРАТЬ
		|	УчетнаяПолитикаСрезПоследних.МетодСписания КАК МетодСписания
		|ИЗ
		|	РегистрСведений.УчетнаяПолитика.СрезПоследних(&Дата, ) КАК УчетнаяПолитикаСрезПоследних";
	
	ЗапросМетодыСписания.УстановитьПараметр("Дата", Объект.МоментВремени());
	РезультатМетодСписания = ЗапросМетодыСписания.Выполнить();
	Если РезультатМетодСписания.Пустой() Тогда
		Сортировка = "ВОЗР";
	Иначе
		ВыборкаМетодСписания = РезультатМетодСписания.Выбрать();
		ВыборкаМетодСписания.Следующий();
		Сортировка = ? (ВыборкаМетодСписания.МетодСписания = Перечисления.МетодыСписания.FIFO, "ВОЗР", "УБЫВ");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДокСписокТоваров.Номенклатура КАК Номенклатура,
		|	СУММА(ДокСписокТоваров.Количество) КАК Количество
		|ПОМЕСТИТЬ ДокТЧ
		|ИЗ
		|	Документ." + Объект.Метаданные().Имя + ".СписокТоваров КАК ДокСписокТоваров
		|ГДЕ
		|	ДокСписокТоваров.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ДокСписокТоваров.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|ВЫБРАТЬ
		|	ДокТЧ.Номенклатура КАК Номенклатура,
		|	ДокТЧ.Количество КАК Количество,
		|	ПартииТоваровОстатки.Партия КАК Партия,
		|	ПартииТоваровОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ПартииТоваровОстатки.СтоимостьОстаток КАК СтоимостьОстаток
		|ИЗ
		|	ДокТЧ КАК ДокТЧ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваров.Остатки(
		|				&МоментИтогов,
		|				(Номенклатура, Склад) В
		|					(ВЫБРАТЬ
		|						ДокТЧ.Номенклатура,
		|						&Склад
		|					ИЗ
		|						ДокТЧ)) КАК ПартииТоваровОстатки
		|		ПО ДокТЧ.Номенклатура = ПартииТоваровОстатки.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПартииТоваровОстатки.Партия.Дата " + Сортировка + "
		|ИТОГИ
		|	МАКСИМУМ(Количество)
		|ПО
		|	Номенклатура";
	
	Запрос.УстановитьПараметр("МоментИтогов", Объект.МоментВремени());
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Если Режим = РежимПроведенияДокумента.Оперативный Тогда
		Объект.Движения.ПартииТоваров.Записать();   // чтобы движение переехали на момент времени и были исключены из выборки
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаИтоги = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаИтоги.Следующий() Цикл
		
		ОсталосьСписать = ВыборкаИтоги.Количество;
		
		ВыборкаДетали = ВыборкаИтоги.Выбрать();
		Пока ОсталосьСписать > 0 И ВыборкаДетали.Следующий() Цикл
			
			Списать = Мин(ОсталосьСписать, ВыборкаДетали.КоличествоОстаток);
			
			Себестоимость = Списать / ВыборкаДетали.КоличествоОстаток * ВыборкаДетали.СтоимостьОстаток;
			
			Движение = Объект.Движения.ПартииТоваров.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Объект.Дата;
			Движение.Номенклатура = ВыборкаДетали.Номенклатура;
			Движение.Склад = Объект.Склад;
			Движение.Партия = ВыборкаДетали.Партия;
			Движение.Количество = Списать;
			Движение.Стоимость = Себестоимость;
			
			ОсталосьСписать = ОсталосьСписать -  Списать;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры
