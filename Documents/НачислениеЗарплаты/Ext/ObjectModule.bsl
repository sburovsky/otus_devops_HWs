
Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// регистр ОсновныеНачисления
	Движения.ОсновныеНачисления.Записывать = Истина;
	Для Каждого ТекСтрокаОсновныеНачисления Из ОсновныеНачисления Цикл
		Если ТекСтрокаОсновныеНачисления.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Больничный Тогда
			
			ДатаНачала = ТекСтрокаОсновныеНачисления.ДатаНачала; // начало заданного периода; не изменяется
			ДатаОкончания = ТекСтрокаОсновныеНачисления.ДатаОкончания; // конец заданного периода; не изменяется
			
			НачалоТекущегоМесяца = НачалоМесяца(ДатаНачала); 
			НачалоПоследнегоМесяца = НачалоМесяца(ДатаОкончания); // для контроля выхода из цикла
			
			Пока НачалоТекущегоМесяца <= НачалоПоследнегоМесяца Цикл
				
				Движение = Движения.ОсновныеНачисления.Добавить();
				Движение.Сторно = Ложь;
				Движение.ВидРасчета = ТекСтрокаОсновныеНачисления.ВидРасчета;
				Движение.ПериодДействияНачало = Макс(ДатаНачала, НачалоТекущегоМесяца);
				Движение.ПериодДействияКонец = Мин(ДатаОкончания, КонецМесяца(НачалоТекущегоМесяца));
				Движение.ПериодРегистрации = Дата;
				Движение.Сотрудник = ТекСтрокаОсновныеНачисления.Сотрудник;
				Движение.Подразделение = ТекСтрокаОсновныеНачисления.Подразделение;
				Движение.График = ТекСтрокаОсновныеНачисления.График;
				
				НачалоТекущегоМесяца = ДобавитьМесяц(НачалоТекущегоМесяца, 1);
				
			КонецЦикла;
			
		Иначе
			
			Движение = Движения.ОсновныеНачисления.Добавить();
			Движение.Сторно = Ложь;
			Движение.ВидРасчета = ТекСтрокаОсновныеНачисления.ВидРасчета;
			Движение.ПериодДействияНачало = ТекСтрокаОсновныеНачисления.ДатаНачала;
			Движение.ПериодДействияКонец = ТекСтрокаОсновныеНачисления.ДатаОкончания;
			Движение.ПериодРегистрации = Дата;
			Движение.Сотрудник = ТекСтрокаОсновныеНачисления.Сотрудник;
			Движение.Подразделение = ТекСтрокаОсновныеНачисления.Подразделение;
			Движение.График = ТекСтрокаОсновныеНачисления.График;
		КонецЕсли;
	КонецЦикла;

	// регистр ДополнительныеНачисления
	Движения.ДополнительныеНачисления.Записывать = Истина;
	Для Каждого ТекСтрокаДополнительныеНачисления Из ДополнительныеНачисления Цикл
		Движение = Движения.ДополнительныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаДополнительныеНачисления.ВидРасчета;
		Движение.ПериодРегистрации = Дата;
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);
		Движение.Сотрудник = ТекСтрокаДополнительныеНачисления.Сотрудник;
		Движение.Подразделение = ТекСтрокаДополнительныеНачисления.Подразделение;
		Движение.Процент = ТекСтрокаДополнительныеНачисления.Процент;
	КонецЦикла;
	
	Движения.Записать();
	
	// расчет начисления по БЛ
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК ЧасыБолезни,
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	Константы.ЧасоваяСтавкаПоБолезни КАК ЧасоваяСтавкаПоБолезни
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
		|			Регистратор = &Регистратор
		|				И ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисления.Больничный)) КАК ОсновныеНачисленияДанныеГрафика,
		|	Константы КАК Константы";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДляБольничного = РезультатЗапроса.Выбрать();
	
	
	Для Каждого СтрокаНабора Из Движения.ОсновныеНачисления Цикл
		
		Если СтрокаНабора.ВидРасчета <> ПланыВидовРасчета.ОсновныеНачисления.Больничный Тогда
			Продолжить;
		КонецЕсли;
		ВыборкаДляБольничного.Сбросить();
		ВыборкаДляБольничного.НайтиСледующий(СтрокаНабора.НомерСтроки, "НомерСтроки");
		СтрокаНабора.Результат = ВыборкаДляБольничного.ЧасоваяСтавкаПоБолезни * ВыборкаДляБольничного.ЧасыБолезни;
		СтрокаНабора.Факт = ВыборкаДляБольничного.ЧасыБолезни;
		
		Движения.ОсновныеНачисления.Записать(, Истина); // исключены записи фактического периода действия, поскольку они не изменились
		
	КонецЦикла;
	
	КонецПроцедуры
